# Properties file with JDBC-related settings.
# Applied by PropertyPlaceholderConfigurer from "dataAccessContext-local.xml".
# Targeted at system administrators, to avoid touching the context XML files.

jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc\:mysql\://192.168.1.223\:3308/XNB?useUnicode=true&characterEncoding=utf8
jdbc.username=root


#jdbc.password=yqwl-admin-hz@001
jdbc.password=
#jdbc.password=123456


#druid数据源配置
#初始化时建立物理连接的个数 默认：0
druid.initialSize = 1
#最大连接池数量 默认：8
druid.maxActive = 20
#最小连接池数量
druid.minIdle = 1
#获取连接时最大等待时间，单位毫秒。
druid.maxWait = 10000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接 1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，单位是毫秒
druid.timeBetweenEvictionRuns = 60000
#配置一个连接在池中最小生存的时间，单位是毫秒
druid.minEvictableIdleTime = 30000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
druid.validationQuery = SELECT 1 
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
druid.testWhileIdle = true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
druid.testOnBorrow = false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
druid.testOnReturn = false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
druid.poolPreparedStatements = false
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
druid.filters = stat,log4j

#c3p0数据源配置
##初始化连接池中得连接数 default: 3
#c3p0.initialPoolSize=3
#c3p0.minPoolSize=2
##连接池中保留的最大连接数 default: 15
#c3p0.maxPoolSize=50
##当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 default: 3
#c3p0.acquireIncrement=2
##最大空闲时间，60秒内未使用则连接被丢弃。若为0则永不丢弃 default: 0
#c3p0.maxIdleTime=120
##每60秒检查所有连接池中的空闲连接 default: 0
#c3p0.idleConnectionTestPeriod=300
#c3p0.maxStatements=100
##c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能通过多线程实现多个操作同时被执行。Default: 3
#c3p0.numHelperThreads=3
##因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 等方法来提升连接测试的性能。Default: false
#c3p0.testConnectionOnCheckout=false
##当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒 default: 0
#c3p0.checkoutTimeout=720000
##如果为false，则获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常，但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认: false
#c3p0.breakAfterAcquireFailure=false
##如果设为true那么在取得连接的同时将校验连接的有效性。Default: false
#c3p0.testConnectionOnCheckin=false